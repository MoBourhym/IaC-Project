name: Build and Deploy Dockerized App to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.AUTH_TOKEN }}
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Read Version
        id: version
        run: |
          # Extract version number from app.js, handling the space after 'v'
          VERSION=$(grep "const version" app/app.js | awk -F"'" '{print $2}')
          # Extract just the numeric part
          VERSION_NUM=$(echo $VERSION | sed 's/v //')
          # Create a clean Docker tag with no spaces or 'v' prefix
          DOCKER_TAG=$(echo $VERSION_NUM | tr -d ' ')
          echo "VERSION=$DOCKER_TAG" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./app
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/glsid-app:${{ env.VERSION }}

      - name: Deploy to EC2
        env:
          EC2_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          VERSION: ${{ env.VERSION }}
        run: |
          # Set up SSH key
          echo "$EC2_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          
          # Deploy to EC2
          ssh -i private_key.pem -o StrictHostKeyChecking=no ubuntu@$EC2_HOST << EOF
            # Log in to Docker Hub
            echo "$DOCKER_PASSWORD" | sudo docker login -u "$DOCKER_USERNAME" --password-stdin
            
            # Pull and run the container
            sudo docker stop \$(sudo docker ps -q) || true
            sudo docker rm \$(sudo docker ps -a -q) || true
            sudo docker pull $DOCKER_USERNAME/glsid-app:$VERSION
            sudo docker run -d -p 3000:3000 $DOCKER_USERNAME/glsid-app:$VERSION
          EOF
          
          # Clean up SSH key
          rm -f private_key.pem